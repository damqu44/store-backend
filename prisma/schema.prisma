datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model delivery_method {
  Id    Int     @id @default(autoincrement())
  Name  String
  Price Decimal

  Product product_delivery_methods[]
  Order   order[]

  @@map("delivery_method")
}

model product {
  Id          Int     @id @default(autoincrement())
  Name        String
  Quantity    Int
  Price       Decimal
  Description String  @db.VarChar(3000)
  CategoryId  Int
  Active      Boolean @default(true)

  DeliveryMethods product_delivery_methods[]
  Category        category?                  @relation(fields: [CategoryId], references: [Id])
  CartItem        cart_item[]
  OrderItems      order_item[]
  Images          image[]

  @@map("product")
}

model image {
  Id        Int     @id @default(autoincrement())
  Url       String
  ProductId Int
  Product   product @relation(fields: [ProductId], references: [Id])

  @@map("image")
}

model product_delivery_methods {
  ProductId        Int
  DeliveryMethodId Int

  Product        product         @relation(fields: [ProductId], references: [Id])
  DeliveryMethod delivery_method @relation(fields: [DeliveryMethodId], references: [Id])

  @@id([ProductId, DeliveryMethodId])
  @@map("product_delivery_methods")
}

model category {
  Id   Int    @id @default(autoincrement())
  Name String

  Products product[]

  @@map("category")
}

enum gender {
  MAN
  FEMALE

  @@map("gender")
}

model user {
  Id                       Int                @id @default(autoincrement())
  Name                     String
  LastName                 String
  Email                    String             @unique
  Telephone                Int                @unique
  Password                 String
  Gender                   gender?
  BirthDate                DateTime?
  AddressDeliveries        address_delivery[]
  PrimaryAddressDeliveryId Int?
  Cart                     cart?
  Orders                   order[]

  @@map("user")
}

model cart {
  Id        Int         @id @default(autoincrement())
  UserId    Int         @unique
  User      user        @relation(fields: [UserId], references: [Id])
  CartItems cart_item[]

  @@map("cart")
}

model cart_item {
  Id        Int     @id @default(autoincrement())
  CartId    Int
  Cart      cart    @relation(fields: [CartId], references: [Id])
  ProductId Int
  Product   product @relation(fields: [ProductId], references: [Id])
  Amount    Int

  @@map("cart_item")
}

model address_delivery {
  Id        Int     @id @default(autoincrement())
  Name      String
  LastName  String
  Street    String
  City      String
  ZipCode   String
  Telephone Int
  UserId    Int
  User      user    @relation(fields: [UserId], references: [Id])
  Orders    order[]

  @@map("address_delivery")
}

model invoice {
  Id      Int     @id @default(autoincrement())
  Name    String
  Street  String?
  City    String?
  ZipCode String?
  Nip     String?
  Orders  order[]

  @@map("invoice")
}

enum order_status {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED

  @@map("order_status")
}

model order {
  Id                Int              @id @default(autoincrement())
  UserId            Int
  User              user             @relation(fields: [UserId], references: [Id])
  AddressDeliveryId Int
  AddressDelivery   address_delivery @relation(fields: [AddressDeliveryId], references: [Id])
  InvoiceId         Int?
  Invoice           invoice?         @relation(fields: [InvoiceId], references: [Id])
  OrderItems        order_item[]
  OrderDate         DateTime         @default(now())
  TotalPrice        Decimal
  DeliveryMethodId  Int
  DeliveryMethod    delivery_method  @relation(fields: [DeliveryMethodId], references: [Id])
  Status            order_status     @default(PENDING)
  IsPaid            Boolean          @default(false)
  Comment           String?
  DiscountCode      String?

  @@map("order")
}

model order_item {
  Id        Int     @id @default(autoincrement())
  OrderId   Int
  Order     order   @relation(fields: [OrderId], references: [Id])
  ProductId Int
  Product   product @relation(fields: [ProductId], references: [Id])
  Quantity  Int
  Price     Decimal

  @@map("order_item")
}

//npx prisma migrate dev --name update-schema
